generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  email String 
  hash  String
  likes Int? @db.Int
  firstName String?
  picture String?
  lastName String?
  provider String
  booknarks Bookmark[]
  classroom Classroom[]
  student Student[]
  @@unique([email,provider])
  @@map("users")
}

model Student {
   id       String   @id @default(auto()) @map("_id") @db.ObjectId
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  firstName String
  lastName String
  number String

  classroomId String @db.ObjectId
  classroom   Classroom   @relation(fields: [classroomId], references: [id])

  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  @@unique([firstName, number])
  @@map("students")
}

model Classroom {
   id       String   @id @default(auto()) @map("_id") @db.ObjectId
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  title String
  description String?
  level String

  classroomCode String @unique
  students Student[]
  
  userId String @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  @@map("classrooms")
}

model Bookmark {
  id       String   @id @default(auto()) @map("_id") @db.ObjectId
  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
  title       String
  description String?
  link        String
  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])
  @@map("booknarks")
}
